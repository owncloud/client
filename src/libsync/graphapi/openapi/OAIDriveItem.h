// model-header.mustache

// licenseInfo.mustache

/**
 * Libre Graph API
 * Libre Graph is a free API for cloud collaboration inspired by the MS Graph API.
 *
 * The version of the OpenAPI document: v1.0.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDriveItem.h
 *
 * Represents a resource inside a drive. Read-only.
 */

#ifndef OAIDriveItem_H
#define OAIDriveItem_H

#include "OAIDeleted.h"
#include "OAIObject.h"
#include "OAISpecialFolder.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "owncloudlib.h"

namespace OpenAPI {
class OAIDeleted;
class OAIOpenGraphFile;
class OAIFileSystemInfo;
class OAIFolder;
class OAISpecialFolder;


class OAIDriveItemPrivate;

class OWNCLOUDSYNC_EXPORT OAIDriveItem : public OAIObject
{
public:
    OAIDriveItem();
    OAIDriveItem(const OAIDriveItem &other);
    OAIDriveItem(QString json);
    ~OAIDriveItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getETag() const;
    void setETag(const QString &e_tag);
    bool is_e_tag_Set() const;
    bool is_e_tag_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getWebUrl() const;
    void setWebUrl(const QString &web_url);
    bool is_web_url_Set() const;
    bool is_web_url_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getCTag() const;
    void setCTag(const QString &c_tag);
    bool is_c_tag_Set() const;
    bool is_c_tag_Valid() const;

    OAIDeleted getDeleted() const;
    void setDeleted(const OAIDeleted &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    OAIObject getRoot() const;
    void setRoot(const OAIObject &root);
    bool is_root_Set() const;
    bool is_root_Valid() const;

    OAISpecialFolder getSpecialFolder() const;
    void setSpecialFolder(const OAISpecialFolder &special_folder);
    bool is_special_folder_Set() const;
    bool is_special_folder_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getWebDavUrl() const;
    void setWebDavUrl(const QString &web_dav_url);
    bool is_web_dav_url_Set() const;
    bool is_web_dav_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();
    Q_DECLARE_PRIVATE(OAIDriveItem)
    QSharedPointer<OAIDriveItemPrivate> d_ptr;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDriveItem)

#endif // OAIDriveItem_H
